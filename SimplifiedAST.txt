(FBind (FunName add) (PatArgs [(VarPatt "arg1") , (VarPatt "arg2") ]) (Matches [ (Patts [(VarPatt "arg1") , (VarPatt "arg2") ]) (GRHSs (GuardRHSs [ [] (GuardBody (OperatorApp (Var +)  (Var arg1) (Var arg2) ) ) ]) (LBinds EmptyLocBinds ) ) ]) )
(TySig  (TypeName nthElement) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (FunType [HsType Not Implemented, (TypeVar "Int") , (AppTy (TypeVar "Maybe") (TypeVar "a") ) ] )  (FBind (FunName nthElement) (PatArgs [(VarPatt "xs"), (VarPatt "a") ]) (Matches [ (Patts [(ConPattPrefix (ConN "[]")  [] ) , (VarPatt "a") ]) (GRHSs (GuardRHSs [ [] (GuardBody (Var Nothing) ) ]) (LBinds EmptyLocBinds ) ) , (Patts [(ParPatt (ConPattInfix (VarPatt "x")  (ConN ":")  (VarPatt "xs") ) ) , (VarPatt "a") ]) (GRHSs (GuardRHSs [(Stmts GuardStmts Not Implemented) (GuardBody (Var Nothing) ) , (Stmts GuardStmts Not Implemented) (GuardBody HsExpr Not Implemented) , (Stmts GuardStmts Not Implemented) (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(DataDecls (DefnType "newtype") (DataName UserId) (QualTyVar [] ) (DataDefnCons [(ConsName UserId)  (ConDetails [(TypeVar "Int") ]) ]) (DerivClause []) )
(TySig  (TypeName myId) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (TypeVar "UserId")  (FBind (FunName myId) (PatArgs []) (Matches [ (Patts []) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(DataDecls (DefnType "data") (DataName Tree) (QualTyVar [(TyVar a) ] ) (DataDefnCons [(ConsName Empty)  (ConDetails []) , (ConsName Node)  (ConDetails [(TypeVar "a") , (ParaTy (AppTy (TypeVar "Tree") (TypeVar "a") ) ), (ParaTy (AppTy (TypeVar "Tree") (TypeVar "a") ) )]) ]) (DerivClause []) )
(TySig  (TypeName exampleTree) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (AppTy (TypeVar "Tree") (TypeVar "Int") )  (FBind (FunName exampleTree) (PatArgs []) (Matches [ (Patts []) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(SynDecls (SynName Name)  (QualTyVar [] ) (SynBody (TypeVar "String") ) )
(SynDecls (SynName ResultFunction)  (QualTyVar [(TyVar a) , (TyVar b) ] ) (SynBody (FunType [(TypeVar "a") , (AppTy (AppTy (TypeVar "Either") (TypeVar "String") ) (TypeVar "b") ) ] ) ) )
(DataDecls (DefnType "data") (DataName Something) (QualTyVar [(TyVar a) , (TyVar b) ] ) (DataDefnCons [(ConsName Blah)  (ConDetails [(TypeVar "a") ]) , (ConsName Bleh)  (ConDetails [(TypeVar "b") ]) ]) (DerivClause []) )
(DataDecls (DefnType "data") (DataName Color) (QualTyVar [] ) (DataDefnCons [(ConsName Red)  (ConDetails []) , (ConsName Green)  (ConDetails []) , (ConsName Blue)  (ConDetails []) ]) (DerivClause []) )
(TySig  (TypeName pad) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (FunType [(TypeVar "Int") , (TypeVar "String") ] )  (FBind (FunName pad) (PatArgs [(VarPatt "day") ]) (Matches [ (Patts [(VarPatt "day") ]) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(TySig  (TypeName greaterThanZero) (OuterTyVarBndrs Not Implemented)  (QualifiedTy (Context [(AppTy (TypeVar "Ord") (TypeVar "a") ) , (AppTy (TypeVar "Num") (TypeVar "a") ) ]) ) (FunType [(TypeVar "a") , (TypeVar "Bool") ] )  (FBind (FunName greaterThanZero) (PatArgs [(VarPatt "x") ]) (Matches [ (Patts [(VarPatt "x") ]) (GRHSs (GuardRHSs [ [] (GuardBody (OperatorApp (Var >)  (Var x) HsExpr Not Implemented) ) ]) (LBinds EmptyLocBinds ) ) ])  ))
(DataDecls (DefnType "data") (DataName MyType) (QualTyVar [] ) (DataDefnCons [(ConsName Foo)  (ConDetails [(TypeVar "Int") , (TypeVar "String") ]) , (ConsName Bar)  (ConDetails []) ]) (DerivClause [(TypeVar "Eq") ] ) )
(TySig  (TypeName example) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (FunType [(TypeVar "MyType") , (TypeVar "String") ] )  (FBind (FunName example) (PatArgs []) (Matches [ (Patts [(ParPatt (ConPattPrefix (ConN "Foo")  [(VarPatt "n") , (VarPatt "s") ] ) ) ]) (GRHSs (GuardRHSs [ [] (GuardBody (OperatorApp (Var ++)  (Var s) HsExpr Not Implemented) ) ]) (LBinds EmptyLocBinds ) ) , (Patts [(ConPattPrefix (ConN "Bar")  [] ) ]) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(TySig  (TypeName applyFunc) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (FunType [(ParaTy (FunType [(TypeVar "Int") , (TypeVar "Int") ] ) ), (TypeVar "Int") , (TypeVar "Int") ] )  (FBind (FunName applyFunc) (PatArgs [(VarPatt "f") , (VarPatt "x") ]) (Matches [ (Patts [(VarPatt "f") , (VarPatt "x") ]) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(TySig  (TypeName abc) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (TypeVar "Int")  (FBind (FunName abc) (PatArgs []) (Matches [ (Patts []) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(FBind (FunName bar) (PatArgs []) (Matches [ (Patts []) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ]) )
(PatBind Not Implemented)
(DataDecls (DefnType "data") (DataName Shape) (QualTyVar [] ) (DataDefnCons [(ConsName Circle)  (ConDetails [(TypeVar "Float") , (TypeVar "Float") , (TypeVar "Float") ]) , (ConsName Rectangle)  (ConDetails [(TypeVar "Float") , (TypeVar "Float") , (TypeVar "Float") , (TypeVar "Float") ]) ]) (DerivClause []) )
(TySig  (TypeName calculateArea) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (FunType [(TypeVar "Float") , (TypeVar "Float") ] )  (FBind (FunName calculateArea) (PatArgs [(VarPatt "r") ]) (Matches [ (Patts [(VarPatt "r") ]) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(TySig  (TypeName insert) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (FunType [(TypeVar "Int") , HsType Not Implemented, HsType Not Implemented] )  (FBind (FunName insert) (PatArgs [(VarPatt "x") , (VarPatt "ys")]) (Matches [ (Patts [(VarPatt "x") , (ConPattPrefix (ConN "[]")  [] ) ]) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) , (Patts [(VarPatt "x") , (ParPatt (ConPattInfix (VarPatt "y")  (ConN ":")  (VarPatt "ys") ) ) ]) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(TySig  (TypeName insertionSort) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (FunType [HsType Not Implemented, HsType Not Implemented] )  (FBind (FunName insertionSort) (PatArgs [(VarPatt "xs")]) (Matches [ (Patts [(ListPatt [(VarPatt "x") ]) ]) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) , (Patts [(ParPatt (ConPattInfix (VarPatt "x")  (ConN ":")  (VarPatt "xs") ) ) ]) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(TySig  (TypeName isPrime) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (FunType [(TypeVar "Int") , (TypeVar "Bool") ] )  (FBind (FunName isPrime) (PatArgs [(VarPatt "n") ]) (Matches [ (Patts [(VarPatt "n") ]) (GRHSs (GuardRHSs [(Stmts GuardStmts Not Implemented) (GuardBody (Var False) ) , (Stmts GuardStmts Not Implemented) (GuardBody HsExpr Not Implemented) ]) (LBinds LocalBinds Not Implemented) ) ])  ))
(DataDecls (DefnType "data") (DataName DayOfWeek) (QualTyVar [] ) (DataDefnCons [(ConsName Sunday)  (ConDetails []) , (ConsName Monday)  (ConDetails []) , (ConsName Tuesday)  (ConDetails []) , (ConsName Wednesday)  (ConDetails []) , (ConsName Thursday)  (ConDetails []) , (ConsName Friday)  (ConDetails []) , (ConsName Saturday)  (ConDetails []) ]) (DerivClause [(TypeVar "Eq") , (TypeVar "Enum") , (TypeVar "Bounded") ] ) )
(DataDecls (DefnType "data") (DataName Month) (QualTyVar [] ) (DataDefnCons [(ConsName January)  (ConDetails []) , (ConsName February)  (ConDetails []) , (ConsName March)  (ConDetails []) , (ConsName April)  (ConDetails []) , (ConsName May)  (ConDetails []) , (ConsName June)  (ConDetails []) , (ConsName July)  (ConDetails []) , (ConsName August)  (ConDetails []) , (ConsName September)  (ConDetails []) , (ConsName October)  (ConDetails []) , (ConsName November)  (ConDetails []) , (ConsName December)  (ConDetails []) ]) (DerivClause [(TypeVar "Enum") , (TypeVar "Bounded") , (TypeVar "Show") ] ) )
(TySig  (TypeName next) (OuterTyVarBndrs Not Implemented)  (QualifiedTy (Context [(AppTy (TypeVar "Eq") (TypeVar "a") ) , (AppTy (TypeVar "Enum") (TypeVar "a") ) , (AppTy (TypeVar "Bounded") (TypeVar "a") ) ]) ) (FunType [(TypeVar "a") , (TypeVar "a") ] )  (FBind (FunName next) (PatArgs [(VarPatt "x") ]) (Matches [ (Patts [(VarPatt "x") ]) (GRHSs (GuardRHSs [(Stmts GuardStmts Not Implemented) (GuardBody (Var minBound) ) , (Stmts GuardStmts Not Implemented) (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ])  ))
(TySig  (TypeName month) (OuterTyVarBndrs Not Implemented)  (QualifiedTy Null) (FunType [(TypeVar "Month") , (TypeVar "DayOfWeek") , (TypeVar "Int") , (TypeVar "String") ] )  (FBind (FunName month) (PatArgs [(VarPatt "m") , (VarPatt "startDay") , (VarPatt "maxDay") ]) (Matches [ (Patts [(VarPatt "m") , (VarPatt "startDay") , (VarPatt "maxDay") ]) (GRHSs (GuardRHSs [ [] (GuardBody (OperatorApp (Var ++)  (OperatorApp (Var ++)  (OperatorApp (Var ++)  HsExpr Not ImplementedHsExpr Not Implemented) (Var week) ) HsExpr Not Implemented) ) ]) (LBinds LocalBinds Not Implemented) ) ])  ))
(FBind (FunName year) (PatArgs []) (Matches [ (Patts []) (GRHSs (GuardRHSs [ [] (GuardBody (OperatorApp (Var ++)  (OperatorApp (Var ++)  (OperatorApp (Var ++)  (OperatorApp (Var ++)  (OperatorApp (Var ++)  (OperatorApp (Var ++)  (OperatorApp (Var ++)  (OperatorApp (Var ++)  (OperatorApp (Var ++)  (OperatorApp (Var ++)  (OperatorApp (Var ++)  HsExpr Not ImplementedHsExpr Not Implemented) HsExpr Not Implemented) HsExpr Not Implemented) HsExpr Not Implemented) HsExpr Not Implemented) HsExpr Not Implemented) HsExpr Not Implemented) HsExpr Not Implemented) HsExpr Not Implemented) HsExpr Not Implemented) HsExpr Not Implemented) ) ]) (LBinds EmptyLocBinds ) ) ]) )
FBind (FunName main) (PatArgs []) (Matches [ (Patts []) (GRHSs (GuardRHSs [ [] (GuardBody HsExpr Not Implemented) ]) (LBinds EmptyLocBinds ) ) ]) 
